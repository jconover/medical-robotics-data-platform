---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-ingestion
  namespace: medrobotics
  labels:
    app: data-ingestion
    component: backend
    tier: api
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: data-ingestion
  template:
    metadata:
      labels:
        app: data-ingestion
        component: backend
        tier: api
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: medrobotics-app
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: data-ingestion
        image: <AWS_ACCOUNT_ID>.dkr.ecr.<AWS_REGION>.amazonaws.com/medrobotics-data-ingestion:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: PORT
          value: "8080"
        - name: RDS_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: RDS_HOST
        - name: RDS_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: RDS_PORT
        - name: RDS_DBNAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: RDS_DBNAME
        - name: RDS_USER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: RDS_USER
        - name: RDS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rds-credentials
              key: password
        - name: S3_RAW_BUCKET
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: S3_RAW_BUCKET
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: data-ingestion
  namespace: medrobotics
  labels:
    app: data-ingestion
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  type: ClusterIP
  selector:
    app: data-ingestion
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  sessionAffinity: None
